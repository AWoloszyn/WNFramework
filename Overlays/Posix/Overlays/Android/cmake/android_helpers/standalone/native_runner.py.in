#!/usr/bin/env python

import argparse
import os
import os.path
import signal
import subprocess
import sys
import time

def file_with_extension(_file):
  if(sys.platform.startswith('win32')):
    return _file + '.exe'
  return _file

def run():
    sdk_dir='${WN_ANDROID_SDK}'

    parser = argparse.ArgumentParser(
                prog='${target}.py',
                description='Run android program')
    parser.add_argument('--run', action='store_true',
        help='Default: Run the program')
    parser.add_argument('--remove', action='store_true',
        help='Remove the program once run')
    parser.add_argument('--install', action='store_true',
            help='Install .apk')

    args = parser.parse_args(sys.argv[1:])

    adb_command = os.path.join(sdk_dir, 'platform-tools',
                               file_with_extension('adb'))
    local_path = os.path.join(os.path.realpath(__file__),
                              '${target}')

    output_path = '/data/local/tmp/output.' + str(os.getpid())
    retval = 0

    run = not args.install or args.run
    if args.install:
      run_args=[adb_command, 'push',
                '${target}', '/data/local/tmp']
      if subprocess.call(run_args) != 0:
        return -1

      run_args=[adb_command, 'shell', 'chmod', '+x',
                '/data/local/tmp/${target}']
      if subprocess.call(run_args) != 0:
        return -1

    if args.run or run:
        run_args=[adb_command, 'shell', '/data/local/tmp/${target}; ' +
                  'echo $? > %s' % output_path]
        subprocess.call(run_args)
        run_args=[adb_command, 'shell', 'cat', output_path]
        err = subprocess.check_output(run_args)
        retval = int(err.strip())
        run_args=[adb_command, 'shell', 'rm', output_path]
        subprocess.call(run_args)

    if args.remove:
      run_args=[adb_command, 'shell', 'rm', '/data/local/tmp/${target}']
      if subprocess.call(run_args) != 0:
        return -1

    return retval

if __name__ == '__main__':
    sys.exit(run())
