set(WN_GRAPHICS_SRC)

option(WN_GRAPHICS_DEVICE_TYPES
  "List of device types to include in build" ${WN_GRAPHICS_DEVICE_TYPES}
)

string(REPLACE "," ";" WN_GRAPHICS_DEVICE_TYPES "${WN_GRAPHICS_DEVICE_TYPES}")
set(WN_GRAPHICS_DEVICE_TYPES_AVAILABLE)

if (WN_PLATFORM STREQUAL Windows)
  set(WN_GRAPHICS_INTERNAL_D3D12_SRC
    inc/Internal/D3D12/WNDevice.h
    inc/Internal/D3D12/WNPhysicalDevice.h
  )

  set(WN_GRAPHICS_D3D12_SRC
    src/D3D12/WNDevice.cpp
  )

  list(APPEND WN_GRAPHICS_SRC
    ${WN_GRAPHICS_INTERNAL_D3D12_SRC}
    ${WN_GRAPHICS_D3D12_SRC}
  )

  source_group("inc\\Internal\\D3D12" FILES ${WN_GRAPHICS_INTERNAL_D3D12_SRC})
  source_group("src\\D3D12" FILES ${WN_GRAPHICS_D3D12_SRC})

  list(APPEND WN_GRAPHICS_DEVICE_TYPES_AVAILABLE d3d12)
endif()

list(APPEND WN_GRAPHICS_DEVICE_TYPES_AVAILABLE vulkan)

if (NOT WN_GRAPHICS_DEVICE_TYPES)
  set(WN_GRAPHICS_DEVICE_TYPES_ENABLED ${WN_GRAPHICS_DEVICE_TYPES_AVAILABLE})
else()
  foreach (WN_GRAPHICS_DEVICE_TYPE ${WN_GRAPHICS_DEVICE_TYPES})
    list(FIND WN_GRAPHICS_DEVICE_TYPES_AVAILABLE
      ${WN_GRAPHICS_DEVICE_TYPE} WN_FOUND_DEVICE_TYPE
    )

    if (WN_FOUND_DEVICE_TYPE EQUAL -1)
      message(FATAL_ERROR
        "Device type '${WN_GRAPHICS_DEVICE_TYPE}' not valid")
    endif()
  endforeach()

  set(WN_GRAPHICS_DEVICE_TYPES_ENABLED ${WN_GRAPHICS_DEVICE_TYPES})
endif()

list(LENGTH WN_GRAPHICS_DEVICE_TYPES_ENABLED
  WN_GRAPHICS_DEVICE_TYPES_AVAILABLE_COUNT
)

foreach(WN_GRAPHICS_DEVICE_TYPE ${WN_GRAPHICS_DEVICE_TYPES_ENABLED})
  string(TOUPPER ${WN_GRAPHICS_DEVICE_TYPE} WN_SANITIZED_GRAPHICS_DEVICE_TYPE)
  set(_WN_GRAPHICS_${WN_SANITIZED_GRAPHICS_DEVICE_TYPE}_DEVICE_TYPE_AVAILABLE
    TRUE
  )
endforeach()

# generate config file
set(CONFIG_FILE_INPUT_PATH_RELATIVE inc/Internal/WNConfig.h.in)
set(CONFIG_FILE_OUTPUT_PATH_RELATIVE inc/Internal/WNConfig.h)

configure_file(
  ${CONFIG_FILE_INPUT_PATH_RELATIVE}
  ${CONFIG_FILE_OUTPUT_PATH_RELATIVE}
)

set(CONFIG_FILE_INPUT_PATH ${CONFIG_FILE_INPUT_PATH_RELATIVE})

set(CONFIG_FILE_OUTPUT_PATH
  ${CMAKE_CURRENT_BINARY_DIR}/${CONFIG_FILE_OUTPUT_PATH_RELATIVE}
)

set(WN_GRAPHICS_INTERNAL_SRC
  ${CONFIG_FILE_INPUT_PATH}
  ${CONFIG_FILE_OUTPUT_PATH}
  inc/Internal/WNDevice.h
  inc/Internal/WNPhysicalDevice.h
)

set(WN_GRAPHICS_INTERNAL_VULKAN_SRC
  inc/Internal/Vulkan/WNDevice.h
  inc/Internal/Vulkan/WNPhysicalDevice.h
)

set(WN_GRAPHICS_VULKAN_SRC
  src/Vulkan/WNDevice.cpp
)

source_group("inc\\Internal" FILES ${WN_GRAPHICS_INTERNAL_SRC})
source_group("inc\\Internal\\Vulkan" FILES ${WN_GRAPHICS_INTERNAL_VULKAN_SRC})
source_group("src\\Vulkan" FILES ${WN_GRAPHICS_VULKAN_SRC})

list(APPEND WN_GRAPHICS_SRC
  ${WN_GRAPHICS_INTERNAL_VULKAN_SRC}
  ${WN_GRAPHICS_INTERNAL_SRC}
  ${WN_GRAPHICS_VULKAN_SRC}
)

add_wn_library(WNGraphics
  SOURCES
    ${WN_GRAPHICS_SRC}
    inc/WNDevice.h
    inc/WNFactory.h
    inc/WNPhysicalDevice.h
    src/WNFactory.cpp
)

add_subdirectory(test)