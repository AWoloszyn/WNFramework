// Copyright (c) 2017, WNProject Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE.txt file.

// CHECK: typedef struct {
struct Foo {
// CHECK-NEXT: int32_t x;
    Int x = 4;
// CHECK-NEXT: } Foo;
}

// CHECK: typedef struct {
struct Bar {
// CHECK-NEXT: Foo* f;
// CHECK-NEXT: Foo __f;
    Foo f = Foo();
// CHECK-NEXT: Bar;
}

// CHECK: typedef struct {
struct Baz {
// CHECK-NEXT: Foo* f;
    shared Foo f = shared Foo();
// CHECK-NEXT: } Baz;
}

// CHECK: {{construct_Baz}}
// CHECK-NEXT: _this->f = (Foo*)_Z3wns14_assign_sharedEvpvpvp((void*)_Z3wns14_construct_FooENR3FooENUC3FooE((Foo*)_Z3wns16_allocate_sharedEvpsfp(sizeof(Foo), &_Z3wns13_destruct_FooEvNUC3FooE)), NULL);
// CHECK-NEXT: return _this

// CHECK: {{destruct_Baz}}
// CHECK-NEXT: _Z3wns13_deref_sharedEvvp((void*)_this->f);

// CHECK: {{construct_Bar}}
// CHECK-NEXT: _this->f = _Z3wns14_construct_FooENR3FooENUC3FooE(&_this->__f);
// CHECK-NEXT: return _this;

// CHECK: {{destruct_Bar}}
// CHECK-NEXT: _Z3wns13_destruct_FooEvNUC3FooE(&_this->__f);
// return _this;

// CHECK: {{2s1E}}
// RUN: s1 -> 4
Int s1() {
// CHECK-NEXT: Bar __wns_temp_expression0;
// CHECK-NEXT: Bar* b = _Z3wns14_construct_BarENR3BarENUC3BarE(&__wns_temp_expression0);
    Bar b = Bar();
// CHECK: int32_t __wns_ret_temp0 = b->f->x;
// CHECK-NEXT: _Z3wns13_destruct_BarEvNUC3BarE(&__wns_temp_expression0);
    return b.f.x;
}

// CHECK: {{2s2E}}
// RUN: s2 -> 4
Int s2() {
// CHECK-NEXT: Baz __wns_temp_expression1;
// CHECK-NEXT: Baz* b = _Z3wns14_construct_BazENR3BazENUC3BazE(&__wns_temp_expression1);
    Baz b = Baz();
// CHECK: int32_t __wns_ret_temp1 = b->f->x;
// CHECK-NEXT: _Z3wns13_destruct_BazEvNUC3BazE(&__wns_temp_expression1);
    return b.f.x;
}

// CHECK: {{2s3E}}
// RUN: s3 -> 4
Int s3() {
// CHECK-NEXT: Baz* b = (Baz*)_Z3wns14_assign_sharedEvpvpvp((void*)_Z3wns14_construct_BazENR3BazENUC3BazE((Baz*)_Z3wns16_allocate_sharedEvpsfp(sizeof(Baz), &_Z3wns13_destruct_BazEvNUC3BazE)), NULL);
    shared Baz b = shared Baz();
// CHECK: int32_t __wns_ret_temp2 = b->f->x;
// CHECK-NEXT: _Z3wns13_deref_sharedEvvp((void*)b);
    return b.f.x;
}
