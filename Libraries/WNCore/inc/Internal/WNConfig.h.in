// Copyright (c) 2015, WNProject Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE.txt file.

#pragma once

#ifndef __WN_CORE_INTERNAL_CONFIG_H__
#define __WN_CORE_INTERNAL_CONFIG_H__

// architecture
#define ${_WN_ARCHITECTURE}
#define ${_WN_ARCHITECTURE_BITNESS}
#define ${_WN_ARCHITECTURE_ENDIANNESS}
#define _WN_ARCH_NAME "${WN_ARCHITECTURE}"

// platform
#define ${_WN_PLATFORM}
#define _WN_PLATFORM_NAME "${WN_PLATFORM}"

// specifiers
#define WN_INLINE ${WN_INLINE}
#define WN_FORCE_INLINE ${WN_FORCE_INLINE}
#define WN_NO_INLINE ${WN_NO_INLINE}
#define WN_THREAD_LOCAL ${WN_THREAD_LOCAL}
#define WN_WEAK_LINK ${WN_WEAK_LINK}
#define WN_RESTRICT ${WN_RESTRICT}
#define WN_OVERRIDE ${WN_OVERRIDE}
#define WN_FINAL ${WN_FINAL}
#define WN_ALIGN(${WN_ALIGN_MACRO_VARIABLE_NAME}) ${WN_ALIGN}
#define WN_ALIGN_OF(${WN_ALIGN_OF_MACRO_VARIABLE_NAME}) ${WN_ALIGN_OF}

// calling conventions
#define WN_CDECL_BEGIN ${WN_CDECL_BEGIN}
#define WN_CDECL_END ${WN_CDECL_END}
#define WN_STDCALL_BEGIN ${WN_STDCALL_BEGIN}
#define WN_STDCALL_END ${WN_STDCALL_END}
#define WN_FASTCALL_BEGIN ${WN_FASTCALL_BEGIN}
#define WN_FASTCALL_END ${WN_FASTCALL_END}
#define WN_VECTORCALL_BEGIN ${WN_VECTORCALL_BEGIN}
#define WN_VECTORCALL_END ${WN_VECTORCALL_END}

// stl features
#cmakedefine _WN_HAS_CPP11_STD_IS_TRIVIALLY_COPYABLE
#cmakedefine _WN_HAS_CPP11_STD_IS_TRIVIALLY_CONSTRUCTIBLE
#cmakedefine _WN_HAS_CPP11_STD_IS_TRIVIALLY_DEFAULT_CONSTRUCTIBLE
#cmakedefine _WN_HAS_CPP11_STD_IS_TRIVIALLY_COPY_CONSTRUCTIBLE
#cmakedefine _WN_HAS_CPP11_STD_IS_TRIVIALLY_MOVE_CONSTRUCTIBLE
#cmakedefine _WN_HAS_CPP11_STD_IS_TRIVIALLY_ASSIGNABLE
#cmakedefine _WN_HAS_CPP11_STD_IS_TRIVIALLY_COPY_ASSIGNABLE
#cmakedefine _WN_HAS_CPP11_STD_IS_TRIVIALLY_MOVE_ASSIGNABLE
#cmakedefine _WN_HAS_CPP11_STD_IS_TRIVIALLY_DESTRUCTIBLE
#cmakedefine _WN_HAS_CPP11_STD_ALIGNED_UNION
#cmakedefine _WN_HAS_CPP14_STD_DECAY_T
#cmakedefine _WN_HAS_CPP14_STD_ENABLE_IF_T
#cmakedefine _WN_HAS_CPP14_STD_CONDITIONAL_T
#cmakedefine _WN_HAS_CPP14_STD_COMMON_TYPE_T
#cmakedefine _WN_HAS_CPP14_STD_RESULT_OF_T
#cmakedefine _WN_HAS_CPP14_STD_INTEGER_SEQUENCE
#cmakedefine _WN_HAS_CPP14_STD_IS_NULL_POINTER
#cmakedefine _WN_HAS_CPP14_STD_EQUAL
#cmakedefine _WN_HAS_CPP14_STD_EQUAL_VARIANT
#cmakedefine _WN_HAS_CPP17_STD_BOOL_CONSTANT

#endif  // __WN_CORE_INTERNAL_CONFIG_H__